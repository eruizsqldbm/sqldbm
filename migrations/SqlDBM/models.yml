# ********************************** SqlDBM: Databricks *********************************
# * Generated by SqlDBM: Databricks export of 'Sample - Logical Model' by eric.ruiz+yew *


version: 2

models:
  - name: Apparel
    description: Clothing products offered by the business
    config:
      contract:
        enforced: true
    constraints:
      - type: foreign_key
        columns:
          - ProductID
        expression: Product.Products (ProductID)
        name: FK_productapparel
      - type: primary_key
        columns:
          - ProductID
        name: PK_1
    columns:
      - name: ProductID
        data_type: int
        description: A unique identifier for each product in the table. This primary key ensures that each product record is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: Type Code
        data_type: string
        description: ''
        constraints:
          - type: not_null
      - name: Designer Name
        data_type: string
        description: ''
        constraints:
          - type: not_null
      - name: Size Code
        data_type: string
        description: ''
        constraints:
          - type: not_null

  - name: Book
    description: Printed or digital reading materials.
    config:
      contract:
        enforced: true
    constraints:
      - type: foreign_key
        columns:
          - ProductID
        expression: Product.Products (ProductID)
        name: FK_productbooks
      - type: primary_key
        columns:
          - ProductID
        name: PK_1
    columns:
      - name: ProductID
        data_type: int
        description: A unique identifier for each product in the table. This primary key ensures that each product record is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: Genere
        data_type: string
        description: ''
        constraints:
          - type: not_null
      - name: Author Name
        data_type: string
        description: ''
        constraints:
          - type: not_null
      - name: ISBN Number
        data_type: string
        description: ''
        constraints:
          - type: not_null

  - name: Campaigns
    description: The Campaigns table stores information about marketing or sales campaigns conducted by the organization. This table captures details about each campaign, including its objectives, duration, and current status. It is essential for tracking and managing marketing activities, analyzing campaign effectiveness, and linking campaigns to sales orders and customer interactions.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - CampaignID
        name: PK_Campaigns
    columns:
      - name: CampaignID
        data_type: int
        description: A unique identifier for each campaign in the table. This primary key ensures that each campaign record is distinct and can be referenced individually.
        constraints:
          - type: not_null
      - name: Name
        data_type: string
        description: The name of the campaign. This field provides a concise, descriptive label for the campaign, making it easy to identify and refer to in reports, dashboards, and other analyses.
      - name: Description
        data_type: string
        description: A detailed description of the campaign, including its goals, target audience, strategies, and key activities. This field helps provide context and understanding of the campaign’s purpose and scope.
      - name: StartDate
        data_type: date
        description: The date when the campaign is scheduled to start or was launched. This field helps in planning, tracking the campaign's timeline, and measuring its performance from the initiation point.
      - name: EndDate
        data_type: date
        description: The date when the campaign is scheduled to end or was concluded. This field is used to define the campaign’s duration and helps in analyzing the campaign’s effectiveness over its operational period.
      - name: Status
        data_type: string
        description: The current status of the campaign, such as "Planned," "Active," "Completed," or "Cancelled." This field helps track the progress of the campaign and supports decision-making regarding ongoing and future marketing activities.

  - name: CampaignTargets
    description: The CampaignTargets table links specific campaigns to targeted customer segments, defining the audiences that each campaign aims to reach. This table is crucial for managing and analyzing the targeting strategy of campaigns, allowing the organization to align marketing efforts with specific groups of customers based on their characteristics or behaviors.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - CampaignTargetID
        name: PK_CampaignTargets
      - type: foreign_key
        columns:
          - CampaignID
        expression: Marketing.Campaigns (CampaignID)
        name: FK_CampaignTargets_1
      - type: foreign_key
        columns:
          - SegmentID
        expression: Marketing.CustomerSegments (SegmentID)
        name: FK_CampaignTargets_2
    columns:
      - name: CampaignTargetID
        data_type: int
        description: A unique identifier for each campaign target record in the table. This primary key ensures that each entry is distinct and can be referenced individually.
        constraints:
          - type: not_null
      - name: CampaignID
        data_type: int
        description: A reference to the unique identifier of the campaign associated with the target segment. This foreign key links to the Campaigns table, connecting each targeting record with a specific campaign and enabling the analysis of which segments are targeted by each marketing effort.
      - name: SegmentID
        data_type: int
        description: A reference to the unique identifier of the customer segment that the campaign is targeting. This foreign key links to the CustomerSegments table, specifying the audience group for the campaign. It helps in managing and understanding the alignment of campaigns with specific customer segments.

  - name: Contractor
    description: The Contractor table is a subtype of the Employees table, specifically designed to capture information about contractors working with the organization. This table includes details that are unique to contractors, such as tax identification numbers, while also linking to the broader Employees table through a shared primary key. It helps manage contractor-specific information and distinguishes contractors from full-time or permanent employees.
    config:
      contract:
        enforced: true
    constraints:
      - type: foreign_key
        columns:
          - EmployeeID
        expression: Human Resources.Employee (EmployeeID)
        name: FK_EmployeeContractor
      - type: primary_key
        columns:
          - EmployeeID
        name: PK_1
    columns:
      - name: EmployeeID
        data_type: int
        description: ''
        constraints:
          - type: not_null
      - name: Tax Identification Number
        data_type: int
        description: 'TIN:  for the contractor, used for tax reporting and compliance purposes. This field is essential for distinguishing contractors from regular employees and for managing legal and financial obligations related to contract work.'
        constraints:
          - type: not_null

  - name: Customer
    description: Individuals or entities who purchase products or services.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - CustomerID
        name: PK_Customers
    columns:
      - name: CustomerID
        data_type: int
        description: A unique identifier for each customer in the table. This primary key ensures that each customer is distinct within the database. It's used to uniquely identify and link customer data across related tables (e.g., Interactions, Orders).
        constraints:
          - type: not_null
      - name: Name
        data_type: string
        description: The full name of the customer, which may include first name, last name, and middle names or initials if applicable. This field is used to personalize communications and identify customers within business processes. The name can also help in differentiating between multiple customers in customer service scenarios.
      - name: Email
        data_type: string
        description: The email address of the customer, used for communication, notifications, and marketing purposes. This field serves as a primary contact method and is crucial for customer engagement, support, and account management. The email is often used for unique identification purposes in addition to the CustomerID

  - name: CustomerSegments
    description: The CustomerSegments table stores information about the different customer segments defined for marketing purposes. Customer segments are distinct groups of customers categorized based on shared characteristics, behaviors, or demographics that are relevant to marketing strategies. This table helps in identifying target audiences, personalizing marketing campaigns, and optimizing customer engagement and acquisition efforts.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - SegmentID
        name: PK_CustomerSegments
    columns:
      - name: SegmentID
        data_type: int
        description: A unique identifier for each customer segment in the table. This primary key ensures that each segment record is distinct and can be referenced individually, allowing for precise targeting and tracking in marketing activities.
        constraints:
          - type: not_null
      - name: Name
        data_type: string
        description: A detailed description of the customer segment, explaining the key traits, behaviors, demographics, or purchasing patterns that define the group. This field provides insights into why this segment is important for marketing efforts, such as their potential lifetime value, preferred channels, or responsiveness to specific types of offers or messaging. This information is crucial for crafting targeted campaigns, personalizing customer experiences, and driving effective marketing strategies

  - name: Electronic
    description: Devices powered by electricity excluding computers and mobile devices.
    config:
      contract:
        enforced: true
    constraints:
      - type: foreign_key
        columns:
          - ProductID
        expression: Product.Products (ProductID)
        name: FK_productelectronic
      - type: primary_key
        columns:
          - ProductID
        name: PK_1
    columns:
      - name: ProductID
        data_type: int
        description: A unique identifier for each product in the table. This primary key ensures that each product record is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: Electronic Category
        data_type: string
        description: ''
        constraints:
          - type: not_null

  - name: Employee
    description: The Employees table contains information about the employees within the organization. It stores personal and professional details such as names, contact information, and job roles. This table is essential for managing employee records, facilitating communication, and supporting various HR and organizational processes.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - EmployeeID
        name: PK_Employees
    columns:
      - name: EmployeeID
        data_type: int
        description: 'Description: A unique identifier for each employee in the table. This primary key ensures that each employee record is distinct and can be referenced individually.'
        constraints:
          - type: not_null
      - name: FirstName
        data_type: string
        description: The first name of the employee. This field is used for identifying employees and personalizing communications. It helps in distinguishing employees, especially when combined with the last name.
      - name: LastName
        data_type: string
        description: The last name (surname) of the employee. This field, along with the first name, provides the full name of the employee, used for identification, documentation, and communication purposes within the organization.
      - name: Email
        data_type: string
        description: The email address of the employee. This field is used for official communication and serves as a primary contact method. It is also often used for system logins, notifications, and correspondence.
      - name: Role
        data_type: string
        description: The job role or position of the employee within the organization. This field describes the employee’s responsibilities and functions, such as "Sales Representative," "Manager," "Developer," or "Support Staff." It is crucial for assigning tasks, managing access permissions, and understanding the employee's role in the company's operations.

  - name: EmployeeAssignments
    description: The EmployeeAssignments table tracks the assignments or projects that employees are involved in within the organization. This table links employees to specific assignments, projects, tasks, or roles, enabling the organization to manage work distribution, track progress, and analyze employee involvement. It plays a crucial role in project management and resource allocation.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - AssignmentID
        name: PK_EmployeeAssignments
      - type: foreign_key
        columns:
          - EmployeeID
        expression: Human Resources.Employee (EmployeeID)
        name: FK_EmployeeAssignments_1
    columns:
      - name: AssignmentID
        data_type: int
        description: A unique identifier for each assignment record in the table. This primary key ensures that each assignment entry is distinct and can be referenced individually.
        constraints:
          - type: not_null
      - name: EmployeeID
        data_type: int
        description: A reference to the unique identifier of the employee assigned to the specific task or project. This foreign key links to the Employees table, connecting each assignment to a specific employee and enabling the tracking of who is responsible for which tasks or projects.

  - name: Full Time
    description: The FullTime table is a subtype of the Employees table, specifically designed to capture information about full-time employees within the organization. This table helps distinguish full-time employees from other types of employees, such as part-time or contractors, and manages details specific to their employment status. It is used for HR purposes, such as tracking benefits eligibility, work hours, and employment classification.
    config:
      contract:
        enforced: true
    constraints:
      - type: foreign_key
        columns:
          - EmployeeID
        expression: Human Resources.Employee (EmployeeID)
        name: FK_17_1
      - type: primary_key
        columns:
          - EmployeeID
        name: PK_1
    columns:
      - name: EmployeeID
        data_type: int
        description: A unique identifier for each full-time employee, which also serves as a foreign key linking to the Employees table. This column ensures that full-time employee records are distinct and directly associated with the corresponding employee records, enabling full-time employees to be managed as a special category within the broader employee management system.
        constraints:
          - type: not_null

  - name: Interactions
    description: Records of communications or engagements with customers
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - InteractionID
        name: PK_Interactions
      - type: foreign_key
        columns:
          - CustomerID
        expression: Customer.Customer (CustomerID)
        name: FK_CustomerInteractions
    columns:
      - name: InteractionID
        data_type: int
        description: A unique identifier for each interaction record in the table. This primary key ensures that each entry is distinct and can be referenced individually. It's typically generated automatically by the system
        constraints:
          - type: not_null
      - name: CustomerID
        data_type: int
        description: Reference to the unique identifier of the customer involved in the interaction
      - name: InteractionType
        data_type: string
        description: Specifies the type of interaction that occurred between the customer and the company. This could include values such as "Email," "Phone Call," "Support Ticket," "Live Chat," or other forms of communication or engagement. This field helps categorize and analyze different ways the company interacts with its customers.
      - name: InteractionDate
        data_type: date
        description: The date (and optionally the time) when the interaction took place. This timestamp provides context for when the interaction occurred and can be used for tracking engagement patterns, measuring response times, and analyzing customer communication over time.

  - name: Inventory
    description: Stock of products available for sale.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - InventoryID
        name: PK_Inventory
      - type: foreign_key
        columns:
          - ProductID
        expression: Product.Products (ProductID)
        name: FK_ProductInventory
    columns:
      - name: InventoryID
        data_type: int
        description: A unique identifier for each inventory record in the table. This primary key ensures that each inventory entry is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: ProductID
        data_type: int
        description: A reference to the unique identifier of the product associated with the inventory record. This foreign key links to the Product table, allowing the company to associate inventory levels with specific products and track stock availability for each item.
      - name: Quantity
        data_type: int
        description: The number of units of the product currently in inventory. This field represents the stock level for each product, helping the company manage inventory levels, reorder supplies, and fulfill customer orders efficiently.

  - name: Invoices
    description: The Invoices table records the details of billing statements issued to customers for goods or services provided. Each invoice represents a financial request for payment based on completed sales orders. This table helps track outstanding amounts, manage payment collections, and ensure accurate financial accounting.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - InvoiceID
        name: PK_Invoices
      - type: foreign_key
        columns:
          - OrderID
        expression: Sales and Orders.SalesOrders (OrderID)
        name: FK_Invoices_1
    columns:
      - name: InvoiceID
        data_type: int
        description: A unique identifier for each invoice in the table. This primary key ensures that each invoice record is distinct and can be referenced individually.
        constraints:
          - type: not_null
      - name: OrderID
        data_type: int
        description: reference to the unique identifier of the sales order associated with the invoice. This foreign key links to the SalesOrders table, allowing the company to associate each invoice with a specific order and track the billing details related to that order.
      - name: InvoiceDate
        data_type: date
        description: Date when the invoice was issued. This field helps in tracking the timing of billing, managing payment schedules, and monitoring financial records.
      - name: AmountDue
        data_type: decimal(9,2)
        description: The total amount of money that is due for payment as stated in the invoice. This includes the cost of products or services provided, taxes, and any other applicable charges. This field is crucial for financial management and tracking outstanding payments.
      - name: Status
        data_type: string
        description: The current status of the invoice, such as "Pending," "Paid," "Overdue," or "Cancelled." This field indicates the payment state of the invoice and helps manage and follow up on outstanding amounts and payment collections.

  - name: OrderItems
    description: Specific products included in a sales order.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - OrderItemID
        name: PK_OrderItems
      - type: foreign_key
        columns:
          - OrderID
        expression: Sales and Orders.SalesOrders (OrderID)
        name: FK_OrderItems_1
      - type: foreign_key
        columns:
          - ProductID
        expression: Product.Products (ProductID)
        name: FK_ProductOrderItems
    columns:
      - name: OrderItemID
        data_type: int
        description: A unique identifier for each order item record in the table. This primary key ensures that each order item entry is distinct and can be referenced individually.
        constraints:
          - type: not_null
      - name: OrderID
        data_type: int
        description: A reference to the unique identifier of the sales order to which the item belongs. This foreign key links to the SalesOrders table, associating each order item with its corresponding sales order and enabling tracking of items within specific orders.
      - name: ProductID
        data_type: int
        description: A reference to the unique identifier of the product included in the order item. This foreign key links to the Product table, allowing the company to associate each order item with a specific product and access detailed product information.
      - name: Quantity
        data_type: int
        description: The number of units of the product included in the order item. This field represents the quantity of the product ordered, essential for processing and fulfilling orders, as well as for inventory management and reporting.
      - name: Price
        data_type: decimal(9,2)
        description: The price per unit of the product at the time the order was placed. This field reflects the cost of each item as it was sold in the specific order, used for calculating the total order value and managing financial records. It may include any applicable discounts or special pricing

  - name: PaymentDetails
    description: The PaymentDetails table stores detailed information about the payment methods used for sales orders. This table captures specifics about payment methods, such as credit card numbers or bank account details, and links them to the respective orders and payment methods. It is essential for tracking and managing the financial aspects of transactions
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - DetailID
        name: PK_PaymentDetails
      - type: foreign_key
        columns:
          - OrderID
        expression: Sales and Orders.SalesOrders (OrderID)
        name: FK_PaymentDetails_1
      - type: foreign_key
        columns:
          - PaymentMethodID
        expression: Sales and Orders.PaymentMethods (PaymentMethodID)
        name: FK_PaymentDetails_2
    columns:
      - name: DetailID
        data_type: int
        description: A unique identifier for each payment detail record in the table. This primary key ensures that each payment detail entry is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: OrderID
        data_type: int
        description: A reference to the unique identifier of the sales order associated with the payment details. This foreign key links to the SalesOrders table, allowing the payment details to be connected with a specific order and facilitating tracking of payment information related to each sales transaction.
      - name: PaymentMethodID
        data_type: int
        description: A reference to the unique identifier of the payment method used for the order. This foreign key links to the PaymentMethods table, providing information about the type of payment method (e.g., credit card, PayPal) and allowing for detailed tracking of how payments were processed.
      - name: DetailName
        data_type: string
        description: he name or label of the payment detail. This field specifies what the payment detail represents, such as "Credit Card Number," "Bank Account Number," or "Transaction ID." It helps identify the type of information stored in the DetailValue field.
      - name: DetailValue
        data_type: string
        description: he value or actual data associated with the payment detail. This field contains the specific information related to the DetailName, such as the credit card number, bank account details, or other payment-related information. It is used to store and retrieve detailed payment information as required for processing transactions.

  - name: PaymentMethods
    description: The PaymentMethods table stores information about the various payment options available for processing transactions. It identifies and categorizes the different methods that customers can use to make payments, such as credit cards, bank transfers, or digital wallets. This table is essential for managing and standardizing the payment options within the system.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - PaymentMethodID
        name: PK_PaymentMethods
    columns:
      - name: PaymentMethodID
        data_type: int
        description: A unique identifier for each payment method in the table. This primary key ensures that each payment method record is distinct and can be referenced individually.
        constraints:
          - type: not_null
      - name: MethodName
        data_type: string
        description: The name of the payment method. This field specifies the type of payment option, such as "Credit Card," "PayPal," "Bank Transfer," or "Cash." It helps users identify and select the appropriate payment method for processing transactions and provides a clear description of the available options.

  - name: Products
    description: General term for any item available for sale.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - ProductID
        name: PK_Products
    columns:
      - name: ProductID
        data_type: int
        description: A unique identifier for each product in the table. This primary key ensures that each product record is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: Name
        data_type: string
        description: The name of the product. This field is used to identify and describe the product in a recognizable and user-friendly way. It helps customers and staff easily identify products and can be used in search and reporting functions.
      - name: Price
        data_type: decimal(9,2)
        description: The selling price of the product. This field represents the cost at which the product is offered for sale, excluding taxes and discounts. It is used for calculating sales revenue, managing pricing strategies, and processing transactions.

  - name: ProductSuppliers
    description: Vendors who provide products or materials
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - ProductSupplierID
        name: PK_ProductSuppliers
      - type: foreign_key
        columns:
          - ProductID
        expression: Product.Products (ProductID)
        name: FK_ProductSuppliers_1
      - type: foreign_key
        columns:
          - SupplierID
        expression: Product.Suppliers (SupplierID)
        name: FK_ProductSuppliers_2
    columns:
      - name: ProductSupplierID
        data_type: int
        description: A unique identifier for each record in the table. This primary key ensures that each product-supplier relationship is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: ProductID
        data_type: int
        description: A reference to the unique identifier of the product associated with the supplier. This foreign key links to the Product table, specifying which product is being supplied. It helps in tracking which products are available from which suppliers.
      - name: SupplierID
        data_type: int
        description: A reference to the unique identifier of the supplier providing the product. This foreign key links to the Suppliers table, indicating the source of the product. It helps in managing supplier relationships and sourcing details for the products.

  - name: PurchaseOrders
    description: Formal requests made by the company to suppliers for products or services needed for operations or resale.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - PurchaseOrderID
        name: PK_PurchaseOrders
      - type: foreign_key
        columns:
          - SupplierID
        expression: Product.Suppliers (SupplierID)
        name: FK_SuppliersPurchaseOrders
    columns:
      - name: PurchaseOrderID
        data_type: int
        description: A unique identifier for each purchase order in the table. This primary key ensures that each purchase order record is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: SupplierID
        data_type: int
        description: A reference to the unique identifier of the supplier from whom the purchase order is made. This foreign key links to the Suppliers table, associating the purchase order with a specific supplier and facilitating tracking and management of procurement activities.
      - name: OrderDate
        data_type: date
        description: The date (and optionally the time) when the purchase order was created. This field helps in tracking the timing of procurement activities, managing supplier deliveries, and monitoring order processing timelines.
      - name: Status
        data_type: string
        description: The current status of the purchase order, such as "Pending," "Approved," "Shipped," "Received," or "Cancelled." This field provides insight into the order's progress through the procurement process and is crucial for managing order fulfillment and supplier interactions.

  - name: SalesOrders
    description: |-
      Orders placed by customers for purchasing products.
      The SalesOrders table captures information about each sales transaction made by customers. It tracks details of orders including which customer made the purchase, any associated marketing campaigns, the sales representative responsible, and financial aspects such as the total amount. This table is essential for managing sales processes, analyzing sales performance, and supporting financial accounting.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - OrderID
        name: PK_SalesOrders
      - type: foreign_key
        columns:
          - CustomerID
        expression: Customer.Customer (CustomerID)
        name: FK_CustomerSalesOrders
      - type: foreign_key
        columns:
          - CampaignID
        expression: Marketing.Campaigns (CampaignID)
        name: FK_17
      - type: foreign_key
        columns:
          - EmployeeID
        expression: Human Resources.Employee (EmployeeID)
        name: Sells Order
    columns:
      - name: OrderID
        data_type: int
        description: A unique identifier for each sales order in the table. This primary key ensures that each sales order record is distinct and can be referenced individually. It is typically generated automatically by the system (e.g., an auto-incrementing integer or a UUID).
        constraints:
          - type: not_null
      - name: CustomerID
        data_type: int
        description: A reference to the unique identifier of the customer who placed the order. This foreign key establishes a link to the Customers table, allowing the company to connect each sales order with the corresponding customer and analyze customer purchasing patterns.
      - name: CampaignID
        data_type: int
        description: A reference to the unique identifier of the marketing campaign associated with the order. This foreign key links to the Campaigns table, helping the company track which sales are influenced by specific marketing efforts, thus measuring the effectiveness of campaigns.
        constraints:
          - type: not_null
      - name: OrderDate
        data_type: date
        description: The date (and optionally the time) when the sales order was placed. This field is essential for tracking sales activity over time, analyzing trends, and managing order processing and fulfillment schedules
      - name: TotalAmount
        data_type: decimal(9,2)
        description: The total monetary value of the sales order, including all items, taxes, discounts, and any applicable fees. This field is used for financial reporting, revenue analysis, and tracking the financial impact of sales
      - name: EmployeeID
        data_type: int
        description: A reference to the unique identifier of the sales representative who facilitated the order. T
        constraints:
          - type: not_null

  - name: Suppliers
    description: Entities that provide products or components to the company, linking products to their respective suppliers.
    config:
      contract:
        enforced: true
    constraints:
      - type: primary_key
        columns:
          - SupplierID
        name: PK_Suppliers
    columns:
      - name: SupplierID
        data_type: int
        description: A unique identifier for each supplier in the table. This primary key ensures that each supplier record is distinct and can be referenced individually
        constraints:
          - type: not_null
      - name: Name
        data_type: string
        description: The name of the supplier. This field is used to identify and describe the supplier in a recognizable and user-friendly way. It helps in managing supplier relationships, referencing suppliers in purchase orders, and ensuring clear communication regarding procurement activities.

